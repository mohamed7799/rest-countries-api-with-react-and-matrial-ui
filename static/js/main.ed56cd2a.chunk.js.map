{"version":3,"sources":["components/header.js","components/form.js","components/countries/country.js","components/countries/countries.js","components/main.js","components/countryDetailes.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","header","padding","boxShadow","breakpoints","down","fontSize","cursor","Header","darkMode","handleTheme","classes","className","Container","Box","display","justifyContent","alignItems","Typography","variant","component","fontWeight","Button","onClick","startIcon","form","margin","gap","noBorder","border","search","width","formControl","minWidth","flexDirection","Form","useContext","MainData","regions","currentRegion","handleRegion","handleName","searchedCountries","action","TextField","value","onChange","InputProps","startAdornment","InputAdornment","position","color","placeholder","FormControl","Select","map","region","MenuItem","a","textDecoration","media","height","item","paddingTop","paddingBottom","inline","Country","country","to","name","Card","CardMedia","image","flag","CardHeader","title","List","ListItem","ListItemText","primary","secondary","population","capital","Countries","filterdCountries","Grid","container","spacing","index","xs","sm","md","useStyle","main","Main","marginTop","root","img","maxHeight","list","listStyle","columns","CountryDetailes","useParams","useState","data","setData","useEffect","fetch","then","res","ok","Error","json","body","srcSet","alt","nativeName","subregion","currencies","languages","elem","join","topLevelDomain","createContext","App","setDarkMode","countries","setCountries","setFilterdCountries","setSearchedCountries","setcurrentRegion","createTheme","palette","type","slice","ThemeProvider","Paper","style","minHeight","exact","path","Provider","e","target","arrTemp","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed56cd2a.chunk.js","sourcesContent":["import { Typography } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Brightness2OutlinedIcon from \"@material-ui/icons/Brightness2Outlined\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    padding: \"16px 0px\",\r\n    boxShadow: \"0px 0px 5px 5px #8080801c\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      \"& h1\": {\r\n        fontSize: 18,\r\n      },\r\n    },\r\n    \"& button\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = ({ darkMode, handleTheme }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <header className={classes.header}>\r\n      <Container>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" component=\"h1\">\r\n            <Box fontWeight=\"fontWeightBold\">Where in the world?</Box>\r\n          </Typography>\r\n          <Button\r\n            onClick={handleTheme}\r\n            variant=\"text\"\r\n            startIcon={darkMode ? <WbSunnyIcon /> : <Brightness2OutlinedIcon />}\r\n          >\r\n            {darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useContext } from \"react\";\r\n\r\nimport { MainData } from \"../App\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    margin: \"3.5rem 0px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    gap: \"1rem\",\r\n    \"& > *\": { boxShadow: \"0px 0px 5px 3px #8080801c\" },\r\n  },\r\n  noBorder: {\r\n    border: \"none\",\r\n  },\r\n  search: {\r\n    width: \"40%\",\r\n  },\r\n  formControl: {\r\n    width: \"20%\",\r\n    minWidth: 120,\r\n  },\r\n  [theme.breakpoints.down(\"xs\")]: {\r\n    form: {\r\n      flexDirection: \"column\",\r\n    },\r\n    search: {\r\n      width: \"100%\",\r\n    },\r\n    formControl: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const {\r\n    regions,\r\n    currentRegion,\r\n    handleRegion,\r\n    handleName,\r\n    searchedCountries,\r\n  } = useContext(MainData);\r\n  return (\r\n    <Container>\r\n      <form className={classes.form} action=\"\">\r\n        <TextField\r\n          value={searchedCountries}\r\n          onChange={handleName}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon color=\"action\" />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          className={classes.search}\r\n          placeholder=\"Search for a country\"\r\n          variant=\"outlined\"\r\n        ></TextField>\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            value={currentRegion}\r\n            variant=\"outlined\"\r\n            onChange={handleRegion}\r\n          >\r\n            {regions.map((region) => (\r\n              <MenuItem key={region} value={region}>\r\n                {region}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { Card } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  a: {\r\n    textDecoration: \"none\",\r\n  },\r\n  media: {\r\n    height: 150,\r\n  },\r\n  item: {\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n});\r\nconst Country = ({ country }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Link className={classes.a} to={`/detailes/${country.name}`}>\r\n      <Card>\r\n        <CardMedia className={classes.media} image={country.flag}></CardMedia>\r\n        <CardHeader title={country.name}></CardHeader>\r\n\r\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n          <ListItem className={classes.item}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography\r\n                  component=\"span\"\r\n                  className={classes.inline}\r\n                  color=\"textPrimary\"\r\n                >\r\n                  Population:\r\n                </Typography>\r\n              }\r\n              secondary={\r\n                <Typography\r\n                  component=\"span\"\r\n                  className={classes.inline}\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {` ${country.population}`}\r\n                </Typography>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <ListItem className={classes.item}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography\r\n                  component=\"span\"\r\n                  className={classes.inline}\r\n                  color=\"textPrimary\"\r\n                >\r\n                  Region:\r\n                </Typography>\r\n              }\r\n              secondary={\r\n                <Typography\r\n                  component=\"span\"\r\n                  className={classes.inline}\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {` ${country.region}`}\r\n                </Typography>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <ListItem className={classes.item}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography\r\n                  component=\"span\"\r\n                  className={classes.inline}\r\n                  color=\"textPrimary\"\r\n                >\r\n                  Capital:\r\n                </Typography>\r\n              }\r\n              secondary={\r\n                <Typography\r\n                  component=\"span\"\r\n                  className={classes.inline}\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {` ${country.capital}`}\r\n                </Typography>\r\n              }\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Country from \"./country\";\r\nimport { Container } from \"@material-ui/core\";\r\nconst Countries = ({ filterdCountries }) => {\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={4}>\r\n        {filterdCountries.map((item, index) => {\r\n          return (\r\n            <Grid key={index} item xs={12} sm={6} md={3}>\r\n              <Country country={item}></Country>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport Form from \"./form\";\r\nimport Countries from \"./countries/countries\";\r\nimport { useContext } from \"react\";\r\n\r\nimport { MainData } from \"../App\";\r\nconst useStyle = makeStyles(() => ({\r\n  main: {\r\n    //backgroundColor: \"hsl(0, 0%, 98%)\",\r\n  },\r\n}));\r\n\r\nconst Main = () => {\r\n  const { filterdCountries } = useContext(MainData);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <section className={classes.main}>\r\n      <Form></Form>\r\n      <Countries filterdCountries={filterdCountries}></Countries>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","//import { Paper } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useEffect, useState } from \"react\";\r\nconst useStyle = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: \"3rem\",\r\n  },\r\n  a: {\r\n    textDecoration: \"none\",\r\n  },\r\n  root: {\r\n    marginTop: \"3rem\",\r\n    gap: \"5rem\",\r\n  },\r\n  img: {\r\n    maxHeight: 350,\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    listStyle: \"none\",\r\n    columns: 2,\r\n  },\r\n  item: {\r\n    padding: 0,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nconst CountryDetailes = () => {\r\n  const { name } = useParams();\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://restcountries.eu/rest/v2/name/${name}`)\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error(\"there was an error\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((body) => {\r\n        setData(body);\r\n      });\r\n  }, []);\r\n\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Link className={classes.a} to=\"/\">\r\n        <Button variant=\"outlined\" startIcon={<ArrowBackIcon />}>\r\n          Back\r\n        </Button>\r\n      </Link>\r\n      {data && (\r\n        <Grid className={classes.root} container alignItems=\"center\">\r\n          <Grid item sm={5}>\r\n            <img className={classes.img} srcSet={data[0].flag} alt=\"\" />\r\n          </Grid>\r\n          <Grid item sm={5}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h1\">\r\n                <Box fontWeight=\"fontWeightBold\">{data[0].name}</Box>\r\n              </Typography>\r\n              <Grid container>\r\n                <Grid item sm={6} xs={12}>\r\n                  <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                    <ListItem className={classes.item}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            Population:\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {` ${data[0].population}`}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem className={classes.item}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            Region:\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {` ${data[0].region}`}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem className={classes.item}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            Capital:\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {` ${data[0].capital}`}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem className={classes.item}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            nativeName:\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {` ${data[0].nativeName}`}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem className={classes.item}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            subregion:\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {` ${data[0].subregion}`}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                    <ListItem className={classes.item}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            currencies:\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {` ${data[0].currencies[0].name}`}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem className={classes.item}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            languages:\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {` ${data[0].languages\r\n                              .map(function (elem) {\r\n                                return elem.name;\r\n                              })\r\n                              .join(\",\")}`}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem className={classes.item}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            topLevelDomain:\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Typography\r\n                            component=\"span\"\r\n                            className={classes.inline}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {` ${data[0].topLevelDomain[0]}`}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CountryDetailes;\r\n","import Header from \"./components/header\";\nimport Main from \"./components/main\";\nimport CountryDetailes from \"./components/countryDetailes\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Paper } from \"@material-ui/core\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nexport const MainData = createContext();\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [countries, setCountries] = useState(null);\n  const [filterdCountries, setFilterdCountries] = useState(null);\n  const [searchedCountries, setSearchedCountries] = useState(\"\");\n  const [currentRegion, setcurrentRegion] = useState(\"All\");\n  const [regions] = useState([\n    \"All\",\n    \"Africa\",\n    \"Americas\",\n    \"Asia\",\n    \"Europe\",\n    \"Oceania\",\n  ]);\n\n  const handleRegionChange = (e) => {\n    setcurrentRegion(e.target.value);\n    setSearchedCountries(\"\");\n    let arrTemp = countries.filter((item) => {\n      return item.region === e.target.value;\n    });\n\n    if (e.target.value === \"All\") {\n      setFilterdCountries(countries);\n    } else {\n      setFilterdCountries(arrTemp);\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setSearchedCountries(e.target.value);\n    let arrTemp = countries.filter((item) => {\n      return item.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    if (e.target.value === \"\") {\n      setFilterdCountries(countries);\n    } else {\n      setFilterdCountries(arrTemp);\n    }\n  };\n\n  const theme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"there was an error\");\n        }\n        return res.json();\n      })\n      .then((body) => {\n        setCountries(body.slice(0, 100));\n        setFilterdCountries(body.slice(0, 100));\n      });\n  }, []);\n\n  const handleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper>\n        <Router>\n          <div className=\"App\" style={{ minHeight: \"100vh\" }}>\n            <Header darkMode={darkMode} handleTheme={handleTheme}></Header>\n\n            {countries && filterdCountries && (\n              <Switch>\n                <Route exact path=\"/\">\n                  <MainData.Provider\n                    value={{\n                      searchedCountries: searchedCountries,\n                      filterdCountries: filterdCountries,\n                      currentRegion: currentRegion,\n                      regions: regions,\n                      handleRegion: handleRegionChange,\n                      handleName: handleNameChange,\n                    }}\n                  >\n                    <Main></Main>\n                  </MainData.Provider>\n                </Route>\n\n                <Route path=\"/detailes/:name\">\n                  <CountryDetailes></CountryDetailes>\n                </Route>\n              </Switch>\n            )}\n          </div>\n        </Router>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}